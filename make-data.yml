# This is a Snakemake file.


import yaml
# load populations definitions
with open('docs/populations.yml', mode='r') as f:
    populations = yaml.load(f)
    pop_ids = [p['id'] for p in populations]
chromosomes = ['2', '3', 'X']
h12_config = {
    'flank': {
        'AOM': 8,
        'BFM': 6,
        'GWA': 6,
        'GNS': 6,
        'BFS': 6,
        'CMS': 6,
        'UGS': 6,
        'GAS': 6,
    },
    'max_decay': {
        'AOM': 3,
        'BFM': 2,
        'GWA': 2,
        'GNS': 2,
        'BFS': 2,
        'CMS': 2,
        'UGS': 2,
        'GAS': 2,
    },
    'min_minor_di': 20,
}


rule build_h12:
    input:
        "agam-report-base/src/python/rockies.py",
        "scripts/build_h12.py",
        "ngs.sanger.ac.uk/production/ag1000g/phase1/selection.1.RC2/windowed/hstats.txt.gz",
    params:
        flank=lambda wildcards, output: h12_config['flank'].get(wildcards.population, 6),
        max_decay=lambda wildcards, output: h12_config['max_decay'].get(wildcards.population, 6),
        max_decay=lambda wildcards, output: h12_config['max_decay'].get(wildcards.population, 6),
        min_minor_di=h12_config['min_minor_di'],
    output:
        "docs/signal/H12/{population}/chr{chromosome}",
        touch("docs/signal/H12/{population}/chr{chromosome}/build.done"),
    shell:
        "python scripts/build_h12.py "
        "    --population {wildcards.population}"
        "    --chromosome {wildcards.chromosome}"
        "    --flank {params.flank}"
        "    --max-decay {params.max_decay}"
        "    --min-minor-di {params.min_minor_di}"


rule tabulate_signals:
    input:
        "scripts/tabulate_signals.py",
        expand("docs/signal/H12/{population}/chr{chromosome}/build.done", population=pop_ids, chromosome=chromosomes),
        # TODO more signals here
    output:
        "docs/signals.csv",
    shell:
        "python scripts/tabulate_signals.py"


rule all:
    input:
        rules.tabulate_signals.output
