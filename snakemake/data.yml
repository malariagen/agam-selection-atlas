# This is a Snakemake file.
import yaml


# load populations definitions
with open('docs/_static/data/populations.yml', mode='r') as f:
    populations = yaml.load(f)
    pop_ids = list(populations.keys())


# analyse whole chromosomes
chromosomes = ['2', '3', 'X']


rule h12:
    input:
        "scripts/peakfit.py",
        "scripts/setup.py",
        "scripts/build_h12.py",
        "ngs.sanger.ac.uk/production/ag1000g/phase1/selection.1.RC2/windowed/hstats.txt.gz",
    params:
        amplitude=0.5,
        min_amplitude=0,
        width=0.5,
        min_width=0.15,
        max_width=3,
        baseline=0.03,
        min_baseline=0,
        max_baseline=1,
        min_peak_delta_aic=90,
        min_flank_delta_aic=30,
        extend_focus_frc=0.05,
        peak_limit_frc=0.2,
        flank=8,
        max_skew=1,
        center_step=20000,
        ceiling=1,
        floor=0,
    output:
        "docs/_static/data/signal/H12/{population}/{chromosome}",
        touch("docs/_static/data/signal/H12/{population}/{chromosome}/.make"),
    shell:
        "python scripts/build_h12.py"
        " --population {wildcards.population}"
        " --chromosome {wildcards.chromosome}"
        " --amplitude {params.amplitude}"
        " --min-amplitude {params.min_amplitude}"
        " --width {params.width}"
        " --min-width {params.min_width}"
        " --max-width {params.max_width}"
        " --baseline {params.baseline}"
        " --min-baseline {params.min_baseline}"
        " --max-baseline {params.max_baseline}"
        " --min-flank-delta-aic {params.min_flank_delta_aic}"
        " --min-peak-delta-aic {params.min_peak_delta_aic}"
        " --extend-focus-frc {params.extend_focus_frc}"
        " --peak-limit-frc {params.peak_limit_frc}"
        " --flank {params.flank}"
        " --max-skew {params.max_skew}"
        " --center-step {params.center_step}"
        " --ceiling {params.ceiling}"
        " --floor {params.floor}"


rule all_h12:
    input:
#        "docs/_static/data/signal/H12/BFS/X/.make",
        expand("docs/_static/data/signal/H12/{pop}/{chrom}/.make", pop=pop_ids, chrom=chromosomes),
    output:
        touch("docs/_static/data/signal/H12/.make")


rule xpehh:
    input:
        "scripts/peakfit.py",
        "scripts/setup.py",
        "scripts/build_xpehh.py",
        "ngs.sanger.ac.uk/production/ag1000g/phase1/selection.1.RC2/raw/xpehh",
    params:
        amplitude=3,
        min_amplitude=0,
        width=0.5,
        min_width=0.15,
        max_width=3,
        baseline=1,
        min_baseline=0,
        max_baseline=100,
        min_peak_delta_aic=90,
        min_flank_delta_aic=30,
        extend_focus_frc=0.05,
        peak_limit_frc=0.2,
        flank=8,
        max_skew=1,
        center_step=20000,
        ceiling=100,
        floor=0,
        values_window_size=800,
    output:
        "docs/_static/data/signal/XPEHH/{focal_pop}.{ref_pop}/{chromosome}",
        touch("docs/_static/data/signal/XPEHH/{focal_pop}.{ref_pop}/{chromosome}/.make"),
    shell:
        "python scripts/build_xpehh.py"
        " --focal-pop {wildcards.focal_pop}"
        " --ref-pop {wildcards.ref_pop}"
        " --chromosome {wildcards.chromosome}"
        " --amplitude {params.amplitude}"
        " --min-amplitude {params.min_amplitude}"
        " --width {params.width}"
        " --min-width {params.min_width}"
        " --max-width {params.max_width}"
        " --baseline {params.baseline}"
        " --min-baseline {params.min_baseline}"
        " --max-baseline {params.max_baseline}"
        " --min-flank-delta-aic {params.min_flank_delta_aic}"
        " --min-peak-delta-aic {params.min_peak_delta_aic}"
        " --extend-focus-frc {params.extend_focus_frc}"
        " --peak-limit-frc {params.peak_limit_frc}"
        " --flank {params.flank}"
        " --max-skew {params.max_skew}"
        " --center-step {params.center_step}"
        " --ceiling {params.ceiling}"
        " --floor {params.floor}"
        " --values-window-size {params.values_window_size}"


rule all_xpehh:
    input:
#        "docs/_static/data/signal/XPEHH/BFS.GWA/X/.make",
        # BFS
        expand("docs/_static/data/signal/XPEHH/BFS.GWA/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/BFS.UGS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/BFS.BFM/{chrom}/.make", chrom=chromosomes),
        # BFM
        expand("docs/_static/data/signal/XPEHH/BFM.GWA/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/BFM.BFS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/BFM.AOM/{chrom}/.make", chrom=chromosomes),
        # TODO: GNS
        # CMS
        expand("docs/_static/data/signal/XPEHH/CMS.GWA/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/CMS.UGS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/CMS.GAS/{chrom}/.make", chrom=chromosomes),
        # UGS
        expand("docs/_static/data/signal/XPEHH/UGS.GWA/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/UGS.BFS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/UGS.CMS/{chrom}/.make", chrom=chromosomes),
        # GAS
        expand("docs/_static/data/signal/XPEHH/GAS.AOM/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/GAS.BFS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/GAS.GWA/{chrom}/.make", chrom=chromosomes),
        # AOM
        expand("docs/_static/data/signal/XPEHH/AOM.GWA/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/AOM.BFM/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/XPEHH/AOM.GAS/{chrom}/.make", chrom=chromosomes),
    output:
        touch("docs/_static/data/signal/XPEHH/.make")


rule ihs:
    input:
        "scripts/peakfit.py",
        "scripts/setup.py",
        "scripts/build_ihs.py",
        "ngs.sanger.ac.uk/production/ag1000g/phase1/selection.1.RC2/raw/ihs",
    params:
        amplitude=3,
        min_amplitude=0,
        width=0.5,
        min_width=0.15,
        max_width=3,
        baseline=1,
        min_baseline=0,
        max_baseline=100,
        min_peak_delta_aic=90,
        min_flank_delta_aic=30,
        extend_focus_frc=0.05,
        peak_limit_frc=0.2,
        flank=8,
        max_skew=1,
        center_step=20000,
        ceiling=100,
        floor=0,
        values_window_size=200,
    output:
        "docs/_static/data/signal/IHS/{population}/{chromosome}",
        touch("docs/_static/data/signal/IHS/{population}/{chromosome}/.make"),
    shell:
        "python scripts/build_ihs.py"
        " --focal-pop {wildcards.population}"
        " --chromosome {wildcards.chromosome}"
        " --amplitude {params.amplitude}"
        " --min-amplitude {params.min_amplitude}"
        " --width {params.width}"
        " --min-width {params.min_width}"
        " --max-width {params.max_width}"
        " --baseline {params.baseline}"
        " --min-baseline {params.min_baseline}"
        " --max-baseline {params.max_baseline}"
        " --min-flank-delta-aic {params.min_flank_delta_aic}"
        " --min-peak-delta-aic {params.min_peak_delta_aic}"
        " --extend-focus-frc {params.extend_focus_frc}"
        " --peak-limit-frc {params.peak_limit_frc}"
        " --flank {params.flank}"
        " --max-skew {params.max_skew}"
        " --center-step {params.center_step}"
        " --ceiling {params.ceiling}"
        " --floor {params.floor}"
        " --values-window-size {params.values_window_size}"


rule all_ihs:
    input:
#        "docs/_static/data/signal/IHS/BFS/X/.make",
#        expand("docs/_static/data/signal/IHS/BFS/{chrom}/.make", chrom=chromosomes),
        expand("docs/_static/data/signal/IHS/{pop}/{chrom}/.make", pop=pop_ids, chrom=chromosomes),
    output:
        touch("docs/_static/data/signal/IHS/.make")
